//! Runtime types to support generated bindings.

use hashbrown::HashSet;

use crate::prelude::*;

/// Link-time options to control the behavior of the `add_to_linker`
/// functions generated by [`component::bindgen!`](crate::component::bindgen).
#[derive(Default)]
pub struct LinkOptions {
    features: HashSet<String>,
}
impl LinkOptions {
    /// Enable a particular `@unstable(..)` feature.
    ///
    /// By default, no unstable features are added to the linker.
    pub fn with_feature(&mut self, feature: &str) -> &mut Self {
        self.features.insert(feature.to_string());
        self
    }

    /// Check if a particular unstable feature is enabled.
    pub fn has_feature(&self, feature: &str) -> bool {
        self.features.contains(feature)
    }
}
